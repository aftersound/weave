{
    "extensions": [
        {
            "group": "COMPONENT_FACTORY",
            "baseType": "io.aftersound.weave.component.ComponentFactory",
            "types": [
                "io.aftersound.weave.cassandra4x.CqlSessionFactory",
                "io.aftersound.weave.common.FileBasedExtensionRegistryFactory",
                "io.aftersound.weave.common.SQLTableBasedExtensionRegistryFactory",
                "io.aftersound.weave.common.SimpleWorkerManagerFactory",
                "io.aftersound.weave.component.ActorRegistryFactory",
                "io.aftersound.weave.concurrent.ThreadPoolExecutorFactory",
                "io.aftersound.weave.couchbase2x.BucketFactory",
                "io.aftersound.weave.couchbase2x.ClusterFactory",
                "io.aftersound.weave.fs.FileHandlesFactory",
                "io.aftersound.weave.fs.FileSystemFactory",
                "io.aftersound.weave.hdfs.FileSystemFactory",
                "io.aftersound.weave.hikari3x.HikariDataSourceFactory",
                "io.aftersound.weave.hsqldb.HSQLDBFactory",
                "io.aftersound.weave.kafka1x.ConsumerFactory",
                "io.aftersound.weave.kafka1x.ConsumerGroupFactory",
                "io.aftersound.weave.kafka1x.ProducerFactory",
                "io.aftersound.weave.mvel2.TemplateEvaluatorFactory",
                "io.aftersound.weave.process.ProcessHubFactory",
                "io.aftersound.weave.springbatch.BatchFacilityFactory",
                "io.aftersound.weave.value.ValueFuncFactoryInitializer",
                "io.aftersound.weave.zk.ZKHandleFactory",
                "io.aftersound.weave.zk.ZKManagerFactory"
            ]
        },
        {
            "group": "VALUE_FUNC_FACTORY",
            "baseType": "io.aftersound.weave.value.ValueFuncFactory",
            "types": [
                "io.aftersound.weave.avro.AvroValueFuncFactory",
                "io.aftersound.weave.cassandra4x.Cassandra4xValueFuncFactory",
                "io.aftersound.weave.couchbase2x.Couchbase2xValueFuncFactory",
                "io.aftersound.weave.jackson.BsonValueFuncFactory",
                "io.aftersound.weave.jackson.JacksonValueFuncFactory",
                "io.aftersound.weave.jackson.SmileValueFuncFactory",
                "io.aftersound.weave.jdbc.JdbcValueFuncFactory",
                "io.aftersound.weave.jsonpath.JsonPathValueFuncFactory",
                "io.aftersound.weave.slf4j.Slf4jValueFuncFactory",
                "io.aftersound.weave.thrift.ThriftValueFuncFactory",
                "io.aftersound.weave.value.CommonValueFuncFactory"
            ]
        },
        {
            "group": "SERVICE_EXECUTOR",
            "baseType": "io.aftersound.weave.service.ServiceExecutor",
            "types": [
                "io.aftersound.weave.common.ValueFuncDescriptorServiceExecutor"
            ]
        }
    ],
    "components": [
        {
            "type": "ActorRegistry",
            "id": "processor.factory.registry",
            "baseType": "io.aftersound.weave.process.ProcessorFactory",
            "extensionTypes": [
                "io.aftersound.weave.cassandra4x.CQLExecutorFactory",
                "io.aftersound.weave.jdbc.ExecuteSQLFactory",
                "io.aftersound.weave.jdbc.SinkFactory",
                "io.aftersound.weave.jdbc.SourceFactory",
                "io.aftersound.weave.kafka1x.AssignFactory",
                "io.aftersound.weave.kafka1x.SinkFactory",
                "io.aftersound.weave.kafka1x.SourceFactory",
                "io.aftersound.weave.kafka1x.SubscribeFactory",
                "io.aftersound.weave.kafka1x.UnsubscribeFactory",
                "io.aftersound.weave.process.ContextAliasFactory",
                "io.aftersound.weave.process.ContextLoggerFactory",
                "io.aftersound.weave.process.ContextSetterFactory",
                "io.aftersound.weave.process.FlatMapperFactory",
                "io.aftersound.weave.process.FunctionFactory",
                "io.aftersound.weave.springbatch.JobCreatorFactory",
                "io.aftersound.weave.springbatch.JobRunnerFactory"
            ]
        },
        {
            "type": "Kafka1X:Producer",
            "id": "kafka1x.producer",
            "options": {
                "bootstrap.servers": "172.16.1.244:9092"
            }
        },
        {
            "type": "Kafka1X:ConsumerGroup",
            "id": "kafka1x.consumer.group",
            "options": {
                "consumer.group.size": "1",
                "group.id": "test",
                "bootstrap.servers": "192.168.1.151:9092",
                "auto.offset.reset": "earliest",
                "enable.auto.commit": "true"
            }
        },
        {
            "type": "TemplateEvaluator",
            "id": "io.aftersound.weave.common.TemplateEvaluator",
            "options": {
            }
        },
        {
            "type": "FileBasedExtensionRegistry",
            "id": "service.extension.registry",
            "options": {
                "directory": "/opt/weave/lib/service/",
                "file": "_extensions.json"
            }
        }
    ],
    "services": [
        {
            "path": "/kafka1x/produce",
            "methods": [
                "POST"
            ],
            "paramFields": [
                {
                    "name": "p1",
                    "type": "String",
                    "paramType": "Path",
                    "multiValued": false,
                    "constraint": {
                        "type": "Required"
                    }
                },
                {
                    "name": "p2",
                    "type": "String",
                    "paramType": "Path",
                    "multiValued": false,
                    "constraint": {
                        "type": "Required"
                    }
                },
                {
                    "name": "records",
                    "type": "com.fasterxml.jackson.databind.JsonNode",
                    "paramType": "Body",
                    "valueFunc": "JACKSON:CONVERT(InputStream,java.util.List)",
                    "multiValued": false,
                    "constraint": {
                        "type": "Required"
                    }
                }
            ],
            "executionControl": {
                "type": "ProcessService",
                "inputs": [
                    "records"
                ],
                "config": {
                    "pipeline": "CHAIN(sink)",
                    "sink": {
                        "type": "Kafka1X:SINK",
                        "producer": "kafka1x.producer",
                        "topic": "versatile",
                        "recordKeyFunc": "NULL()",
                        "recordValueFunc": "JACKSON:CONVERT(Object,ByteArray)",
                        "input": "records",
                        "output": "results"
                    }
                },
                "outputs": [
                    "records",
                    "results"
                ]
            }
        },
        {
            "path": "/kafka1x/subscribe",
            "methods": [
                "PUT"
            ],
            "paramFields": [
                {
                    "name": "p1",
                    "type": "String",
                    "paramType": "Path",
                    "multiValued": false,
                    "constraint": {
                        "type": "Required"
                    }
                },
                {
                    "name": "p2",
                    "type": "String",
                    "paramType": "Path",
                    "multiValued": false,
                    "constraint": {
                        "type": "Required"
                    }
                },
                {
                    "name": "topics",
                    "type": "String",
                    "paramType": "Query",
                    "multiValued": true,
                    "valueDelimiter": ",",
                    "constraint": {
                        "type": "Required"
                    }
                }
            ],
            "executionControl": {
                "type": "ProcessService",
                "inputs": [
                    "topics"
                ],
                "config": {
                    "pipeline": "CHAIN(subscribe)",
                    "subscribe": {
                        "type": "Kafka1X:SUBSCRIBE",
                        "consumer": "kafka1x.consumer.group:0",
                        "output": "subscriptions"
                    }
                },
                "outputs": [
                    "subscriptions"
                ]
            }
        },
        {
            "path": "/kafka1x/consume",
            "methods": [
                "GET"
            ],
            "paramFields": [
                {
                    "name": "p1",
                    "type": "String",
                    "paramType": "Path",
                    "multiValued": false,
                    "constraint": {
                        "type": "Required"
                    }
                },
                {
                    "name": "p2",
                    "type": "String",
                    "paramType": "Path",
                    "multiValued": false,
                    "constraint": {
                        "type": "Required"
                    }
                }
            ],
            "executionControl": {
                "type": "ProcessService",
                "inputs": [
                ],
                "config": {
                    "pipeline": "CHAIN(consume)",
                    "consume": {
                        "type": "Kafka1X:SOURCE",
                        "consumer": "kafka1x.consumer.group:0",
                        "recordParseFunc": "JACKSON:CONVERT(ByteArray,java.util.Map)",
                        "pollTimeout": 3000,
                        "enableAsyncCommit": "true",
                        "output": "records"
                    }
                },
                "outputs": [
                    "records"
                ]
            }
        },
        {
            "path": "/kafka1x/unsubscribe",
            "methods": [
                "DELETE"
            ],
            "paramFields": [
                {
                    "name": "p1",
                    "type": "String",
                    "paramType": "Path",
                    "multiValued": false,
                    "constraint": {
                        "type": "Required"
                    }
                },
                {
                    "name": "p2",
                    "type": "String",
                    "paramType": "Path",
                    "multiValued": false,
                    "constraint": {
                        "type": "Required"
                    }
                }
            ],
            "executionControl": {
                "type": "ProcessService",
                "inputs": [
                ],
                "config": {
                    "pipeline": "CHAIN(unsubscribe)",
                    "unsubscribe": {
                        "type": "Kafka1X:UNSUBSCRIBE",
                        "consumer": "kafka1x.consumer.group:0"
                    }
                },
                "outputs": [
                    "records"
                ]
            }
        }
    ]
}