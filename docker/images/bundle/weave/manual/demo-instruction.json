{
    "about": {
        "Weave": "a declarative service and task execution platform",
        "features": [
            "Specification first approach. Services are created by CRUDing metadata/spec.",
            "Highly extensible with different extension points: ComponentFactory, ServiceExecutor, AuthHandler, RateLimitHandler, ValueFunc, ProcessorFactory, etc.",
            "All functionalities/capabilities are added by extensions, including Service Discovery in the demo"
        ]
    },
    "description": "Follow the instruction to walk through the demo of Weave Declarative Services",
    "prerequisites": [
        "Have Docker Hub account",
        "Have Docker Desktop installed",
        "Have Postman installed"
    ],
    "step1": {
        "description": "start a service instance that serves as service control plane",
        "shellCommands": [
            "docker container run -it -p $8080:8080 --env WEAVE_APP=cp0 aftersound/weave:bundle --name cp0"
        ]
    },
    "step2": {
        "description": "find your machines IP address in LAN, which is needed in later steps. Let's say the IP is YOUR_MACHINE_IP",
        "shellCommands": [
            "ifconfig"
        ]
    },
    "step3": {
        "description": "import Postman collections and environments by raw content into Postman. To get raw content of each collection or environment, run shell commands",
        "shellCommands": [
            "curl -H 'Accept: application/json' http://localhost:8080/postman/collection/cp0-services",
            "curl -H 'Accept: application/json' http://localhost:8080/postman/collection/basics0-rcm",
            "curl -H 'Accept: application/json' http://localhost:8080/postman/collection/basics0-services",
            "curl -H 'Accept: application/json' http://localhost:8080/postman/collection/kafka0-rcm",
            "curl -H 'Accept: application/json' http://localhost:8080/postman/collection/kafka0-services",
            "curl -H 'Accept: application/json' http://localhost:8080/postman/environment/cp0",
            "curl -H 'Accept: application/json' http://localhost:8080/postman/environment/basics0",
            "curl -H 'Accept: application/json' http://localhost:8080/postman/environment/kafka0"
        ]
    },
    "step4": {
        "description": "try the services under Postman Collection 'cp0: services (use Environment cp0@8080)'"
    },
    "step5": {
        "description": "try to start a service instance that hosts greeting services, which is expected to fail to start",
        "shellCommands": [
            "docker container run -it -p $8081:8080 --env WEAVE_APP=basics0 --env WEAVE_RUNTIME_CONFIG_SERVER=http://<YOUR_MACHINE_IP>:8080 aftersound/weave:bundle --name basics0"
        ]
    },
    "step6": {
        "description": "try following services user Postman Collection 'basics0: runtime config management (user Environment cp0@8080)'",
        "services": [
            "CREATE Namespace",
            "GET Namespace",
            "CREATE Runtime Config",
            "GET Runtime Config"
        ],
        "explanation": "In essence, the runtime config is the instruction from service control plane for any service instance in namespace 'basics0' to materialize/realize services as instructed."
    },
    "step7": {
        "description": "try again to start a service instance that hosts greeting services, which is expected to start successfully",
        "shellCommands": [
            "docker container run -it -p $8081:8080 --env WEAVE_APP=basics0 --env WEAVE_RUNTIME_CONFIG_SERVER=http://<YOUR_MACHINE_IP>:8080 aftersound/weave:bundle --name basics0"
        ]
    },
    "step8": {
        "description": "try the services using Postman Collection 'basics0: services (user Environment basics0@8081)' to get some understanding of the fundamentals of Weave Declarative Services",
        "fundamentals": [
            "the structure of runtime config",
            "the structure of service metadata/specification: (1) interface: method + parameters, (2) the binding with implementation in executionControl",
            "the key extension points"
        ]
    },
    "step9": {
        "description": "try following services user Postman Collection 'kafka0: runtime config management (user Environment cp0@8080)'",
        "services": [
            "CREATE Namespace",
            "GET Namespace",
            "CREATE Runtime Config",
            "GET Runtime Config"
        ],
        "explanation": "In essence, the runtime config is the instruction for any service instance in namespace 'kafka0' to materialize/realize services as instructed."
    },
    "step10": {
        "description": "try to start a service instance that hosts services interact with Apache Kafka cluster, which is expected to start successfully",
        "shellCommands": [
            "docker container run -it -p $8082:8080 --env WEAVE_APP=kafka0 --env WEAVE_RUNTIME_CONFIG_SERVER=http://<YOUR_MACHINE_IP>:8080 aftersound/weave:bundle --name kafka0"
        ]
    },
    "step11": {
        "description": "try the services using Postman Collection 'kafka0: services (user Environment basics0@8081)', but expect to see service call failure because required dependency Apache Kafka cluster is missing"
    },
    "step12": {
        "description": "set up Apache Kafka cluster. (a) decode the following resource using BASE64 and save as docker-compose.yaml in a directory. (b) enter the directory and run the following shell command. (c) create topic 'user' with 3 partitions",
        "shellCommands": [
            "docker-compose up"
        ],
        "resource": "dmVyc2lvbjogIjMiCnNlcnZpY2VzOgogIHpvb2tlZXBlcjoKICAgIGltYWdlOiAnYml0bmFtaS96b29rZWVwZXI6My44JwogICAgcG9ydHM6CiAgICAgIC0gJzIxODE6MjE4MScKICAgIGVudmlyb25tZW50OgogICAgICAtIEFMTE9XX0FOT05ZTU9VU19MT0dJTj15ZXMKICBrYWZrYToKICAgIGltYWdlOiAnYml0bmFtaS9rYWZrYTozLjInCiAgICBwb3J0czoKICAgICAgLSAnOTA5Mjo5MDkyJwogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gS0FGS0FfQlJPS0VSX0lEPTEKICAgICAgLSBLQUZLQV9DRkdfTElTVEVORVJTPVBMQUlOVEVYVDovLzo5MDkyCiAgICAgIC0gS0FGS0FfQ0ZHX0FEVkVSVElTRURfTElTVEVORVJTPVBMQUlOVEVYVDovLzo5MDkyCiAgICAgIC0gS0FGS0FfQ0ZHX1pPT0tFRVBFUl9DT05ORUNUPXpvb2tlZXBlcjoyMTgxCiAgICAgIC0gQUxMT1dfUExBSU5URVhUX0xJU1RFTkVSPXllcwogICAgZGVwZW5kc19vbjoKICAgICAgLSB6b29rZWVwZXI="
    },
    "step13": {
        "description": "try to update 'kafka0' runtime config and restart docker container for 'kafka0' to see if it calls "
    }
}