{
    "about": {
        "Weave": "a declarative service and task execution platform",
        "features": [
            "Specification first approach. Services are created by CRUDing metadata/spec.",
            "Highly extensible with different extension points: ComponentFactory, ServiceExecutor, AuthHandler, RateLimitHandler, ValueFunc, ProcessorFactory, etc.",
            "All functionalities/capabilities are added by extensions, including Service Discovery in the demo"
        ]
    },
    "description": "Follow the instruction to walk through the demo of Weave Declarative Services",
    "prerequisites": [
        "Have Docker Hub account",
        "Have Docker Desktop installed",
        "Have Postman installed"
    ],
    "postman": {
        "collections": [
            {
                "info": {
                    "_postman_id": "ad19c4ad-4257-4617-97d9-6b956a4f3475",
                    "name": "cp0: services (use Environment cp0@8080)",
                    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
                    "_exporter_id": "3066161"
                },
                "item": [
                    {
                        "name": "Service Discovery",
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true,
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "GET",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/discovery/service",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "discovery",
                                    "service"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "Service Discovery (OpenAPI spec)",
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true,
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "GET",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/discovery/openapi",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "discovery",
                                    "openapi"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "Management Service Discovery",
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true,
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "GET",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/management/discovery/service",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "discovery",
                                    "service"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "Management Service Discovery (OpenAPI spec)",
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true,
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "GET",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/management/discovery/openapi",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "discovery",
                                    "openapi"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "Find Namespaces",
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "GET",
                            "header": [
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "url": {
                                "raw": "{{HOST}}/management/namespaces/find?fetch=10",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "namespaces",
                                    "find"
                                ],
                                "query": [
                                    {
                                        "key": "fetch",
                                        "value": "10"
                                    }
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "Read Demo Instruction",
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "GET",
                            "header": [
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "url": {
                                "raw": "{{HOST}}/demo-instruction",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "demo-instruction"
                                ]
                            }
                        },
                        "response": []
                    }
                ]
            },
            {
                "info": {
                    "_postman_id": "63c18145-218c-47f3-b338-f1b79da64ecc",
                    "name": "basics0: runtime config management  (use Environment cp0@8080)",
                    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
                    "_exporter_id": "3066161"
                },
                "item": [
                    {
                        "name": "CREATE Namespace",
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "POST",
                            "header": [
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"id\": \"basics0\",\n    \"owner\": \"aftersound\",\n    \"ownerEmail\": \"aftersound@gmail.com\",\n    \"description\": \"demonstrate basics of weave service framework and extension points\",\n    \"attributes\": {}\n}",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/management/namespace",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "namespace"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "GET Namespace",
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "GET",
                            "header": [
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "url": {
                                "raw": "{{HOST}}/management/namespace/basics0",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "namespace",
                                    "basics0"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "UPDATE Namespace",
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "PUT",
                            "header": [
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"id\": \"basics0\",\n    \"owner\": \"aftersound\",\n    \"ownerEmail\": \"aftersound@gmail.com\",\n    \"description\": \"demonstrate basics of weave service framework and extension points\",\n    \"attributes\": {}\n}",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/management/namespace",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "namespace"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "DELETE Namespace",
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "DELETE",
                            "header": [
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "url": {
                                "raw": "{{HOST}}/management/namespace/basics0",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "namespace",
                                    "basics0"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "CREATE RCM",
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "POST",
                            "header": [
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"actor.bindings.config.list\": [\n        {\n            \"group\": \"COMPONENT_FACTORY\",\n            \"baseType\": \"io.aftersound.weave.component.ComponentFactory\",\n            \"types\": []\n        },\n        {\n            \"group\": \"VALUE_FUNC_FACTORY\",\n            \"baseType\": \"io.aftersound.weave.common.ValueFuncFactory\",\n            \"types\": [\n                \"io.aftersound.weave.service.request.ParamValueFuncFactory\",\n                \"io.aftersound.weave.value.CommonValueFuncFactory\"\n            ]\n        },\n        {\n            \"group\": \"AUTH_HANDLER\",\n            \"baseType\": \"io.aftersound.weave.service.security.AuthHandler\",\n            \"types\": [\n                \"io.aftersound.weave.sample.extension.service.security.DemoAuthHandler\"\n            ]\n        },\n        {\n            \"group\": \"RATE_LIMIT_EVALUATOR\",\n            \"baseType\": \"io.aftersound.weave.service.rl.RateLimitEvaluator\",\n            \"types\": [\n                \"io.aftersound.weave.sample.extension.service.rl.DemoRateLimitEvaluator\"\n            ]\n        },\n        {\n            \"group\": \"ADMIN_SERVICE_EXECUTOR\",\n            \"baseType\": \"io.aftersound.weave.service.ServiceExecutor\",\n            \"types\": []\n        },\n        {\n            \"group\": \"SERVICE_EXECUTOR\",\n            \"baseType\": \"io.aftersound.weave.service.ServiceExecutor\",\n            \"types\": [\n                \"io.aftersound.weave.sample.extension.service.GreetingServiceExecutor\"\n            ]\n        }\n    ],\n    \"component.config.list\": [],\n    \"admin.service.metadata.list\": [],\n    \"service.metadata.list\": [\n        {\n            \"methods\": [\n                \"GET\"\n            ],\n            \"path\": \"/greet/{name}\",\n            \"paramFields\": [\n                {\n                    \"name\": \"p1\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                }\n            ],\n            \"executionControl\": {\n                \"type\": \"GreetingService\",\n                \"greetingWords\": [\n                    \"Hello\",\n                    \"Hola\",\n                    \"您好\"\n                ]\n            }\n        },\n        {\n            \"methods\": [\n                \"GET\"\n            ],\n            \"path\": \"/greet1/{name}\",\n            \"paramFields\": [\n                {\n                    \"name\": \"p1\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                }\n            ],\n            \"authControl\": {\n                \"type\": \"Demo\",\n                \"userCredentials\": {\n                    \"user\": \"W6ph5Mm5Pz8GgiULbPgzG37mj9g=\"\n                }\n            },\n            \"executionControl\": {\n                \"type\": \"GreetingService\",\n                \"greetingWords\": [\n                    \"Hello\",\n                    \"Hola\",\n                    \"您好\"\n                ]\n            }\n        },\n        {\n            \"methods\": [\n                \"GET\"\n            ],\n            \"path\": \"/greet2/{name}\",\n            \"paramFields\": [\n                {\n                    \"name\": \"p1\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                }\n            ],\n            \"rateLimitControl\": {\n                \"type\": \"Demo\"\n            },\n            \"executionControl\": {\n                \"type\": \"GreetingService\",\n                \"greetingWords\": [\n                    \"Hello\",\n                    \"Hola\",\n                    \"您好\"\n                ]\n            }\n        },\n        {\n            \"methods\": [\n                \"GET\"\n            ],\n            \"path\": \"/greet3/{name}\",\n            \"paramFields\": [\n                {\n                    \"name\": \"p1\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                }\n            ],\n            \"authControl\": {\n                \"type\": \"Demo\",\n                \"userCredentials\": {\n                    \"user\": \"W6ph5Mm5Pz8GgiULbPgzG37mj9g=\"\n                }\n            },\n            \"rateLimitControl\": {\n                \"type\": \"Demo\"\n            },\n            \"executionControl\": {\n                \"type\": \"GreetingService\",\n                \"greetingWords\": [\n                    \"Hello\",\n                    \"Hola\",\n                    \"您好\"\n                ]\n            }\n        }\n    ]\n}",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/management/basics0/runtime-config",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "basics0",
                                    "runtime-config"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "GET RCM",
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true,
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "GET",
                            "header": [
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/management/basics0/runtime-config",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "basics0",
                                    "runtime-config"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "UPDATE RCM",
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "PUT",
                            "header": [
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"actor.bindings.config.list\": [\n        {\n            \"group\": \"COMPONENT_FACTORY\",\n            \"baseType\": \"io.aftersound.weave.component.ComponentFactory\",\n            \"types\": []\n        },\n        {\n            \"group\": \"VALUE_FUNC_FACTORY\",\n            \"baseType\": \"io.aftersound.weave.common.ValueFuncFactory\",\n            \"types\": [\n                \"io.aftersound.weave.service.request.ParamValueFuncFactory\",\n                \"io.aftersound.weave.value.CommonValueFuncFactory\"\n            ]\n        },\n        {\n            \"group\": \"AUTH_HANDLER\",\n            \"baseType\": \"io.aftersound.weave.service.security.AuthHandler\",\n            \"types\": [\n                \"io.aftersound.weave.sample.extension.service.security.DemoAuthHandler\"\n            ]\n        },\n        {\n            \"group\": \"RATE_LIMIT_EVALUATOR\",\n            \"baseType\": \"io.aftersound.weave.service.rl.RateLimitEvaluator\",\n            \"types\": [\n                \"io.aftersound.weave.sample.extension.service.rl.DemoRateLimitEvaluator\"\n            ]\n        },\n        {\n            \"group\": \"ADMIN_SERVICE_EXECUTOR\",\n            \"baseType\": \"io.aftersound.weave.service.ServiceExecutor\",\n            \"types\": []\n        },\n        {\n            \"group\": \"SERVICE_EXECUTOR\",\n            \"baseType\": \"io.aftersound.weave.service.ServiceExecutor\",\n            \"types\": [\n                \"io.aftersound.weave.sample.extension.service.GreetingServiceExecutor\"\n            ]\n        }\n    ],\n    \"component.config.list\": [],\n    \"admin.service.metadata.list\": [],\n    \"service.metadata.list\": [\n        {\n            \"methods\": [\n                \"GET\"\n            ],\n            \"path\": \"/greet/{name}\",\n            \"paramFields\": [\n                {\n                    \"name\": \"p1\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                }\n            ],\n            \"executionControl\": {\n                \"type\": \"GreetingService\",\n                \"greetingWords\": [\n                    \"Hello\",\n                    \"Hola\",\n                    \"您好\"\n                ]\n            }\n        },\n        {\n            \"methods\": [\n                \"GET\"\n            ],\n            \"path\": \"/greet1/{name}\",\n            \"paramFields\": [\n                {\n                    \"name\": \"p1\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                }\n            ],\n            \"authControl\": {\n                \"type\": \"Demo\",\n                \"userCredentials\": {\n                    \"user\": \"W6ph5Mm5Pz8GgiULbPgzG37mj9g=\"\n                }\n            },\n            \"executionControl\": {\n                \"type\": \"GreetingService\",\n                \"greetingWords\": [\n                    \"Hello\",\n                    \"Hola\",\n                    \"您好\"\n                ]\n            }\n        },\n        {\n            \"methods\": [\n                \"GET\"\n            ],\n            \"path\": \"/greet2/{name}\",\n            \"paramFields\": [\n                {\n                    \"name\": \"p1\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                }\n            ],\n            \"rateLimitControl\": {\n                \"type\": \"Demo\"\n            },\n            \"executionControl\": {\n                \"type\": \"GreetingService\",\n                \"greetingWords\": [\n                    \"Hello\",\n                    \"Hola\",\n                    \"您好\"\n                ]\n            }\n        },\n        {\n            \"methods\": [\n                \"GET\"\n            ],\n            \"path\": \"/greet3/{name}\",\n            \"paramFields\": [\n                {\n                    \"name\": \"p1\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                }\n            ],\n            \"authControl\": {\n                \"type\": \"Demo\",\n                \"userCredentials\": {\n                    \"user\": \"W6ph5Mm5Pz8GgiULbPgzG37mj9g=\"\n                }\n            },\n            \"rateLimitControl\": {\n                \"type\": \"Demo\"\n            },\n            \"executionControl\": {\n                \"type\": \"GreetingService\",\n                \"greetingWords\": [\n                    \"Hello\",\n                    \"Hola\",\n                    \"您好\"\n                ]\n            }\n        }\n    ]\n}",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/management/basics0/runtime-config",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "basics0",
                                    "runtime-config"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "DELETE RCM",
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "DELETE",
                            "header": [
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/management/basics0/runtime-config",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "basics0",
                                    "runtime-config"
                                ]
                            }
                        },
                        "response": []
                    }
                ]
            },
            {
                "info": {
                    "_postman_id": "4053cee6-fff2-450e-b86d-8d6ee211ac97",
                    "name": "basics0: services (use Environment basic0@8081)",
                    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
                    "_exporter_id": "3066161"
                },
                "item": [
                    {
                        "name": "Service Discovery",
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true,
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "GET",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/discovery/service",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "discovery",
                                    "service"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "Service Discovery (OpenAPI spec)",
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true,
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "GET",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/discovery/openapi",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "discovery",
                                    "openapi"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "Auth (N) RL (N)",
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "request": {
                            "method": "GET",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/greet/Daniel",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "greet",
                                    "Daniel"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "Auth (Y) RL (N)",
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "request": {
                            "method": "GET",
                            "header": [
                                {
                                    "key": "Authorization",
                                    "value": "Basic dXNlcjpwYXNzd29yZA==",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/greet1/Daniel",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "greet1",
                                    "Daniel"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "Auth (N) RL (Y)",
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "request": {
                            "method": "GET",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/greet2/Daniel",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "greet2",
                                    "Daniel"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "Auth (Y) RL (Y)",
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "request": {
                            "method": "GET",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Authorization",
                                    "value": "Basic dXNlcjpwYXNzd29yZA==",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/greet3/Daniel",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "greet3",
                                    "Daniel"
                                ]
                            }
                        },
                        "response": []
                    }
                ]
            },
            {
                "info": {
                    "_postman_id": "fa7f409e-6b4c-4bbb-b807-e86278f6df2b",
                    "name": "kafka0: runtime config management  (use Environment cp0@8080)",
                    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
                    "_exporter_id": "3066161"
                },
                "item": [
                    {
                        "name": "CREATE Namespace",
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "POST",
                            "header": [
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"id\": \"kafka0\",\n    \"owner\": \"aftersound\",\n    \"ownerEmail\": \"aftersound@gmail.com\",\n    \"description\": \"Services that consumers data from and produces data into Apache Kafka\",\n    \"attributes\": {}\n}",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/management/namespace",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "namespace"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "GET Namespace",
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "GET",
                            "header": [
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "url": {
                                "raw": "{{HOST}}/management/namespace/kafka0",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "namespace",
                                    "kafka0"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "UPDATE Namespace",
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "PUT",
                            "header": [
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"id\": \"kafka0\",\n    \"owner\": \"aftersound\",\n    \"ownerEmail\": \"aftersound@gmail.com\",\n    \"description\": \"Services that consumers data from and produces data into Apache Kafka\",\n    \"attributes\": {}\n}",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/management/namespace",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "namespace"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "DELETE Namespace",
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "DELETE",
                            "header": [
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "url": {
                                "raw": "{{HOST}}/management/namespace/kafka0",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "namespace",
                                    "kafka0"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "CREATE RCM",
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "POST",
                            "header": [
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"actor.bindings.config.list\": [\n        {\n            \"group\": \"COMPONENT_FACTORY\",\n            \"baseType\": \"io.aftersound.weave.component.ComponentFactory\",\n            \"types\": [\n                \"io.aftersound.weave.kafka1x.ConsumerFactory\",\n                \"io.aftersound.weave.kafka1x.ProducerFactory\",\n                \"io.aftersound.weave.mvel2.TemplateEvaluatorFactory\",\n                \"io.aftersound.weave.process.ProcessorFactoryRegistryFactory\"\n            ]\n        },\n        {\n            \"group\": \"VALUE_FUNC_FACTORY\",\n            \"baseType\": \"io.aftersound.weave.common.ValueFuncFactory\",\n            \"types\": [\n                \"io.aftersound.weave.jackson.BsonValueFuncFactory\",\n                \"io.aftersound.weave.jackson.JacksonValueFuncFactory\",\n                \"io.aftersound.weave.jackson.SmileValueFuncFactory\",\n                \"io.aftersound.weave.kafka1x.KafkaValueFuncFactory\",\n                \"io.aftersound.weave.service.request.ParamValueFuncFactory\",\n                \"io.aftersound.weave.slf4j.Slf4jValueFuncFactory\",\n                \"io.aftersound.weave.value.CommonValueFuncFactory\"\n            ]\n        },\n        {\n            \"group\": \"ADMIN_SERVICE_EXECUTOR\",\n            \"baseType\": \"io.aftersound.weave.service.ServiceExecutor\",\n            \"types\": []\n        },\n        {\n            \"group\": \"SERVICE_EXECUTOR\",\n            \"baseType\": \"io.aftersound.weave.service.ServiceExecutor\",\n            \"types\": [\n                \"io.aftersound.weave.process.ProcessServiceExecutor\"\n            ]\n        }\n    ],\n    \"component.config.list\": [\n        {\n            \"type\": \"ProcessorFactoryRegistry\",\n            \"id\": \"processor.factory.registry\",\n            \"extensionTypes\": [\n                \"io.aftersound.weave.process.FlatMapperFactory\",\n                \"io.aftersound.weave.process.FunctionFactory\",\n                \"io.aftersound.weave.kafka1x.AssignFactory\",\n                \"io.aftersound.weave.kafka1x.SourceFactory\",\n                \"io.aftersound.weave.kafka1x.SinkFactory\"\n            ]\n        },\n        {\n            \"type\": \"TemplateEvaluator\",\n            \"id\": \"template.evaluator\",\n            \"options\": {}\n        },\n        {\n            \"type\": \"Kafka1X:Consumer\",\n            \"id\": \"kafka1x.consumer\",\n            \"options\": {\n                \"bootstrap.servers\": \"192.168.1.80:9092\",\n                \"group.id\": \"user.consumer\",\n                \"topic.partitions\": \"user#0-2\",\n                \"auto.offset.reset\": \"earliest\",\n                \"isolation.level\": \"read_committed\"\n            }\n        },\n        {\n            \"type\": \"Kafka1X:Producer\",\n            \"id\": \"kafka1x.producer\",\n            \"options\": {\n                \"bootstrap.servers\": \"192.168.1.80:9092\"\n            }\n        }\n    ],\n    \"admin.service.metadata.list\": [],\n    \"service.metadata.list\": [\n        {\n            \"methods\": [\n                \"POST\"\n            ],\n            \"path\": \"/kafka/user\",\n            \"paramFields\": [\n                {\n                    \"name\": \"p1\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                },\n                {\n                    \"name\": \"p2\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                },\n                {\n                    \"name\": \"user\",\n                    \"type\": \"String\",\n                    \"valueFunc\": \"IS:READ_STRING()\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Body\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                }\n            ],\n            \"executionControl\": {\n                \"type\": \"ProcessService\",\n                \"inputs\": [\n                    \"user\"\n                ],\n                \"config\": {\n                    \"pipeline\": \"CHAIN(transform,sink)\",\n                    \"transform\": {\n                        \"type\": \"FUNC\",\n                        \"input\": \"user\",\n                        \"func\": \"LIST:AS_LIST()\",\n                        \"output\": \"users\"\n                    },\n                    \"sink\": {\n                        \"type\": \"Kafka1X:SINK\",\n                        \"producer\": \"kafka1x.producer\",\n                        \"topic\": \"user\",\n                        \"recordKeyFunc\": \"NULL()\",\n                        \"recordValueFunc\": \"CHAIN(JACKSON:CONVERT(JSON,JsonNode),JACKSON:CONVERT(Object,ByteArray))\",\n                        \"input\": \"users\",\n                        \"output\": \"results\"\n                    }\n                },\n                \"outputs\": [\n                    \"results\"\n                ]\n            }\n        },\n        {\n            \"methods\": [\n                \"POST\"\n            ],\n            \"path\": \"/kafka/users\",\n            \"paramFields\": [\n                {\n                    \"name\": \"p1\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                },\n                {\n                    \"name\": \"p2\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                },\n                {\n                    \"name\": \"users\",\n                    \"type\": \"String\",\n                    \"valueFunc\": \"JACKSON:CONVERT(InputStream(JSON),java.util.List)\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Body\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                }\n            ],\n            \"executionControl\": {\n                \"type\": \"ProcessService\",\n                \"inputs\": [\n                    \"users\"\n                ],\n                \"config\": {\n                    \"pipeline\": \"CHAIN(sink)\",\n                    \"sink\": {\n                        \"type\": \"Kafka1X:SINK\",\n                        \"producer\": \"kafka1x.producer\",\n                        \"topic\": \"user\",\n                        \"recordKeyFunc\": \"NULL()\",\n                        \"recordValueFunc\": \"JACKSON:CONVERT(Object,ByteArray)\",\n                        \"input\": \"users\",\n                        \"output\": \"results\"\n                    }\n                },\n                \"outputs\": [\n                    \"results\"\n                ]\n            }\n        },\n        {\n            \"methods\": [\n                \"GET\"\n            ],\n            \"path\": \"/kafka/users\",\n            \"paramFields\": [\n                {\n                    \"name\": \"p1\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                },\n                {\n                    \"name\": \"p2\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                }\n            ],\n            \"executionControl\": {\n                \"type\": \"ProcessService\",\n                \"config\": {\n                    \"pipeline\": \"CHAIN(source)\",\n                    \"source\": {\n                        \"type\": \"Kafka1X:SOURCE\",\n                        \"consumer\": \"kafka1x.consumer\",\n                        \"recordParseFunc\": \"Kafka1X:CRM(BASE64:ewogICAgIm5hbWUiOiAidXNlciIsCiAgICAiZmllbGRzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAidG9waWMiLAogICAgICAgICAgICAidmFsdWVGdW5jIjogIkthZmthMVg6Q1I6RklFTEQodG9waWMpIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAibmFtZSI6ICJwYXJ0aXRpb24iLAogICAgICAgICAgICAidmFsdWVGdW5jIjogIkthZmthMVg6Q1I6RklFTEQocGFydGl0aW9uKSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAib2Zmc2V0IiwKICAgICAgICAgICAgInZhbHVlRnVuYyI6ICJLYWZrYTFYOkNSOkZJRUxEKG9mZnNldCkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJuYW1lIjogInRpbWVzdGFtcFR5cGUiLAogICAgICAgICAgICAidmFsdWVGdW5jIjogIkthZmthMVg6Q1I6RklFTEQodGltZXN0YW1wVHlwZSkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJuYW1lIjogInRpbWVzdGFtcCIsCiAgICAgICAgICAgICJ2YWx1ZUZ1bmMiOiAiS2Fma2ExWDpDUjpGSUVMRCh0aW1lc3RhbXApIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAibmFtZSI6ICJrZXkiLAogICAgICAgICAgICAidmFsdWVGdW5jIjogIkNIQUlOKEthZmthMVg6Q1I6RklFTEQoa2V5KSxTVFI6REVDT0RFKCksSU5UOkZST00oU3RyaW5nKSkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJuYW1lIjogInZhbHVlIiwKICAgICAgICAgICAgInZhbHVlRnVuYyI6ICJDSEFJTihLYWZrYTFYOkNSOkZJRUxEKHZhbHVlKSxKQUNLU09OOkNPTlZFUlQoQnl0ZUFycmF5LGphdmEudXRpbC5NYXApKSIKICAgICAgICB9CiAgICBdCn0K)\",\n                        \"enableSyncCommit\": \"true\",\n                        \"output\": \"users\"\n                    }\n                },\n                \"outputs\": [\n                    \"users\"\n                ]\n            }\n        }\n    ]\n}",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/management/kafka0/runtime-config",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "kafka0",
                                    "runtime-config"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "GET RCM",
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true,
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "GET",
                            "header": [
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/management/kafka0/runtime-config",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "kafka0",
                                    "runtime-config"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "UPDATE RCM",
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "PUT",
                            "header": [
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"actor.bindings.config.list\": [\n        {\n            \"group\": \"COMPONENT_FACTORY\",\n            \"baseType\": \"io.aftersound.weave.component.ComponentFactory\",\n            \"types\": [\n                \"io.aftersound.weave.kafka1x.ConsumerFactory\",\n                \"io.aftersound.weave.kafka1x.ProducerFactory\",\n                \"io.aftersound.weave.mvel2.TemplateEvaluatorFactory\",\n                \"io.aftersound.weave.process.ProcessorFactoryRegistryFactory\"\n            ]\n        },\n        {\n            \"group\": \"VALUE_FUNC_FACTORY\",\n            \"baseType\": \"io.aftersound.weave.common.ValueFuncFactory\",\n            \"types\": [\n                \"io.aftersound.weave.jackson.BsonValueFuncFactory\",\n                \"io.aftersound.weave.jackson.JacksonValueFuncFactory\",\n                \"io.aftersound.weave.jackson.SmileValueFuncFactory\",\n                \"io.aftersound.weave.kafka1x.KafkaValueFuncFactory\",\n                \"io.aftersound.weave.service.request.ParamValueFuncFactory\",\n                \"io.aftersound.weave.slf4j.Slf4jValueFuncFactory\",\n                \"io.aftersound.weave.value.CommonValueFuncFactory\"\n            ]\n        },\n        {\n            \"group\": \"ADMIN_SERVICE_EXECUTOR\",\n            \"baseType\": \"io.aftersound.weave.service.ServiceExecutor\",\n            \"types\": []\n        },\n        {\n            \"group\": \"SERVICE_EXECUTOR\",\n            \"baseType\": \"io.aftersound.weave.service.ServiceExecutor\",\n            \"types\": [\n                \"io.aftersound.weave.process.ProcessServiceExecutor\"\n            ]\n        }\n    ],\n    \"component.config.list\": [\n        {\n            \"type\": \"ProcessorFactoryRegistry\",\n            \"id\": \"processor.factory.registry\",\n            \"extensionTypes\": [\n                \"io.aftersound.weave.process.FlatMapperFactory\",\n                \"io.aftersound.weave.process.FunctionFactory\",\n                \"io.aftersound.weave.kafka1x.AssignFactory\",\n                \"io.aftersound.weave.kafka1x.SourceFactory\",\n                \"io.aftersound.weave.kafka1x.SinkFactory\"\n            ]\n        },\n        {\n            \"type\": \"TemplateEvaluator\",\n            \"id\": \"template.evaluator\",\n            \"options\": {}\n        },\n        {\n            \"type\": \"Kafka1X:Consumer\",\n            \"id\": \"kafka1x.consumer\",\n            \"options\": {\n                \"bootstrap.servers\": \"192.168.1.80:9092\",\n                \"group.id\": \"user.consumer\",\n                \"topic.partitions\": \"user#0-2\",\n                \"auto.offset.reset\": \"earliest\",\n                \"isolation.level\": \"read_committed\"\n            }\n        },\n        {\n            \"type\": \"Kafka1X:Producer\",\n            \"id\": \"kafka1x.producer\",\n            \"options\": {\n                \"bootstrap.servers\": \"192.168.1.80:9092\"\n            }\n        }\n    ],\n    \"admin.service.metadata.list\": [],\n    \"service.metadata.list\": [\n        {\n            \"methods\": [\n                \"POST\"\n            ],\n            \"path\": \"/kafka/user\",\n            \"paramFields\": [\n                {\n                    \"name\": \"p1\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                },\n                {\n                    \"name\": \"p2\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                },\n                {\n                    \"name\": \"user\",\n                    \"type\": \"String\",\n                    \"valueFunc\": \"IS:READ_STRING()\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Body\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                }\n            ],\n            \"executionControl\": {\n                \"type\": \"ProcessService\",\n                \"inputs\": [\n                    \"user\"\n                ],\n                \"config\": {\n                    \"pipeline\": \"CHAIN(transform,sink)\",\n                    \"transform\": {\n                        \"type\": \"FUNC\",\n                        \"input\": \"user\",\n                        \"func\": \"LIST:AS_LIST()\",\n                        \"output\": \"users\"\n                    },\n                    \"sink\": {\n                        \"type\": \"Kafka1X:SINK\",\n                        \"producer\": \"kafka1x.producer\",\n                        \"topic\": \"user\",\n                        \"recordKeyFunc\": \"NULL()\",\n                        \"recordValueFunc\": \"CHAIN(JACKSON:CONVERT(JSON,JsonNode),JACKSON:CONVERT(Object,ByteArray))\",\n                        \"input\": \"users\",\n                        \"output\": \"results\"\n                    }\n                },\n                \"outputs\": [\n                    \"results\"\n                ]\n            }\n        },\n        {\n            \"methods\": [\n                \"POST\"\n            ],\n            \"path\": \"/kafka/users\",\n            \"paramFields\": [\n                {\n                    \"name\": \"p1\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                },\n                {\n                    \"name\": \"p2\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                },\n                {\n                    \"name\": \"users\",\n                    \"type\": \"String\",\n                    \"valueFunc\": \"JACKSON:CONVERT(InputStream(JSON),java.util.List)\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Body\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                }\n            ],\n            \"executionControl\": {\n                \"type\": \"ProcessService\",\n                \"inputs\": [\n                    \"users\"\n                ],\n                \"config\": {\n                    \"pipeline\": \"CHAIN(sink)\",\n                    \"sink\": {\n                        \"type\": \"Kafka1X:SINK\",\n                        \"producer\": \"kafka1x.producer\",\n                        \"topic\": \"user\",\n                        \"recordKeyFunc\": \"NULL()\",\n                        \"recordValueFunc\": \"JACKSON:CONVERT(Object,ByteArray)\",\n                        \"input\": \"users\",\n                        \"output\": \"results\"\n                    }\n                },\n                \"outputs\": [\n                    \"results\"\n                ]\n            }\n        },\n        {\n            \"methods\": [\n                \"GET\"\n            ],\n            \"path\": \"/kafka/users\",\n            \"paramFields\": [\n                {\n                    \"name\": \"p1\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                },\n                {\n                    \"name\": \"p2\",\n                    \"type\": \"String\",\n                    \"multiValued\": false,\n                    \"paramType\": \"Path\",\n                    \"constraint\": {\n                        \"type\": \"Required\"\n                    }\n                }\n            ],\n            \"executionControl\": {\n                \"type\": \"ProcessService\",\n                \"config\": {\n                    \"pipeline\": \"CHAIN(source)\",\n                    \"source\": {\n                        \"type\": \"Kafka1X:SOURCE\",\n                        \"consumer\": \"kafka1x.consumer\",\n                        \"recordParseFunc\": \"Kafka1X:CRM(BASE64:ewogICAgIm5hbWUiOiAidXNlciIsCiAgICAiZmllbGRzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAidG9waWMiLAogICAgICAgICAgICAidmFsdWVGdW5jIjogIkthZmthMVg6Q1I6RklFTEQodG9waWMpIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAibmFtZSI6ICJwYXJ0aXRpb24iLAogICAgICAgICAgICAidmFsdWVGdW5jIjogIkthZmthMVg6Q1I6RklFTEQocGFydGl0aW9uKSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAib2Zmc2V0IiwKICAgICAgICAgICAgInZhbHVlRnVuYyI6ICJLYWZrYTFYOkNSOkZJRUxEKG9mZnNldCkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJuYW1lIjogInRpbWVzdGFtcFR5cGUiLAogICAgICAgICAgICAidmFsdWVGdW5jIjogIkthZmthMVg6Q1I6RklFTEQodGltZXN0YW1wVHlwZSkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJuYW1lIjogInRpbWVzdGFtcCIsCiAgICAgICAgICAgICJ2YWx1ZUZ1bmMiOiAiS2Fma2ExWDpDUjpGSUVMRCh0aW1lc3RhbXApIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAibmFtZSI6ICJrZXkiLAogICAgICAgICAgICAidmFsdWVGdW5jIjogIkNIQUlOKEthZmthMVg6Q1I6RklFTEQoa2V5KSxTVFI6REVDT0RFKCksSU5UOkZST00oU3RyaW5nKSkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJuYW1lIjogInZhbHVlIiwKICAgICAgICAgICAgInZhbHVlRnVuYyI6ICJDSEFJTihLYWZrYTFYOkNSOkZJRUxEKHZhbHVlKSxKQUNLU09OOkNPTlZFUlQoQnl0ZUFycmF5LGphdmEudXRpbC5NYXApKSIKICAgICAgICB9CiAgICBdCn0K)\",\n                        \"enableSyncCommit\": \"true\",\n                        \"output\": \"users\"\n                    }\n                },\n                \"outputs\": [\n                    \"users\"\n                ]\n            }\n        }\n    ]\n}",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/management/kafka0/runtime-config",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "kafka0",
                                    "runtime-config"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "DELETE RCM",
                        "protocolProfileBehavior": {
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "DELETE",
                            "header": [
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/management/kafka0/runtime-config",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "management",
                                    "kafka0",
                                    "runtime-config"
                                ]
                            }
                        },
                        "response": []
                    }
                ]
            },
            {
                "info": {
                    "_postman_id": "bff225dd-afd7-4c44-a2d3-6db7ddfcdcfc",
                    "name": "kafka0: services (use Environment kafka0@8082)",
                    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
                    "_exporter_id": "3066161"
                },
                "item": [
                    {
                        "name": "Service Discovery",
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true,
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "GET",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/discovery/service",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "discovery",
                                    "service"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "Service Discovery (OpenAPI spec)",
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true,
                            "disabledSystemHeaders": {
                                "accept": true
                            }
                        },
                        "request": {
                            "method": "GET",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json",
                                    "type": "text"
                                },
                                {
                                    "key": "Accept",
                                    "value": "application/json",
                                    "type": "text"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/discovery/openapi",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "discovery",
                                    "openapi"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "produce user",
                        "request": {
                            "method": "POST",
                            "header": [],
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"firstName\": \"Nikola\",\n    \"lastName\": \"Tesla\"\n}",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/kafka/user?_diag=1",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "kafka",
                                    "user"
                                ],
                                "query": [
                                    {
                                        "key": "_diag",
                                        "value": "1"
                                    }
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "produce users",
                        "request": {
                            "method": "POST",
                            "header": [],
                            "body": {
                                "mode": "raw",
                                "raw": "[\n    {\n        \"firstName\": \"Nikola\",\n        \"lastName\": \"Tesla\"\n    },\n    {\n        \"firstName\": \"Thomas\",\n        \"lastName\": \"Edison\"\n    },\n    {\n        \"firstName\": \"Nikola\",\n        \"lastName\": \"Tesla\"\n    },\n    {\n        \"firstName\": \"Thomas\",\n        \"lastName\": \"Edison\"\n    },\n    {\n        \"firstName\": \"Nikola\",\n        \"lastName\": \"Tesla\"\n    },\n    {\n        \"firstName\": \"Thomas\",\n        \"lastName\": \"Edison\"\n    },\n    {\n        \"firstName\": \"Nikola\",\n        \"lastName\": \"Tesla\"\n    },\n    {\n        \"firstName\": \"Thomas\",\n        \"lastName\": \"Edison\"\n    },\n    {\n        \"firstName\": \"Nikola\",\n        \"lastName\": \"Tesla\"\n    },\n    {\n        \"firstName\": \"Thomas\",\n        \"lastName\": \"Edison\"\n    },\n        {\n        \"firstName\": \"Nikola\",\n        \"lastName\": \"Tesla\"\n    },\n    {\n        \"firstName\": \"Thomas\",\n        \"lastName\": \"Edison\"\n    },\n    {\n        \"firstName\": \"Nikola\",\n        \"lastName\": \"Tesla\"\n    },\n    {\n        \"firstName\": \"Thomas\",\n        \"lastName\": \"Edison\"\n    },\n    {\n        \"firstName\": \"Nikola\",\n        \"lastName\": \"Tesla\"\n    },\n    {\n        \"firstName\": \"Thomas\",\n        \"lastName\": \"Edison\"\n    },\n    {\n        \"firstName\": \"Nikola\",\n        \"lastName\": \"Tesla\"\n    },\n    {\n        \"firstName\": \"Thomas\",\n        \"lastName\": \"Edison\"\n    },\n    {\n        \"firstName\": \"Nikola\",\n        \"lastName\": \"Tesla\"\n    },\n    {\n        \"firstName\": \"Thomas\",\n        \"lastName\": \"Edison\"\n    }\n]",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/kafka/users",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "kafka",
                                    "users"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "consume",
                        "protocolProfileBehavior": {
                            "disableBodyPruning": true
                        },
                        "request": {
                            "method": "GET",
                            "header": [],
                            "body": {
                                "mode": "raw",
                                "raw": "",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{HOST}}/kafka/users",
                                "host": [
                                    "{{HOST}}"
                                ],
                                "path": [
                                    "kafka",
                                    "users"
                                ]
                            }
                        },
                        "response": []
                    }
                ]
            }
        ],
        "environments": [
            {
                "id": "0c834454-8975-41ed-ad38-a34e219292ca",
                "name": "cp0@8080",
                "values": [
                    {
                        "key": "HOST",
                        "value": "http://localhost:8080",
                        "type": "default",
                        "enabled": true
                    }
                ],
                "_postman_variable_scope": "environment",
                "_postman_exported_at": "2023-02-18T21:56:26.467Z",
                "_postman_exported_using": "Postman/9.31.27"
            },
            {
                "id": "fe1ba243-2101-4cd5-834a-0fc1b43b4346",
                "name": "basics0@8081",
                "values": [
                    {
                        "key": "HOST",
                        "value": "http://localhost:8081",
                        "type": "default",
                        "enabled": true
                    }
                ],
                "_postman_variable_scope": "environment",
                "_postman_exported_at": "2023-02-18T21:56:43.817Z",
                "_postman_exported_using": "Postman/9.31.27"
            },
            {
                "id": "d81527a3-1062-4091-b81d-e41925d909a4",
                "name": "kafka0@8082",
                "values": [
                    {
                        "key": "HOST",
                        "value": "http://localhost:8082",
                        "type": "default",
                        "enabled": true
                    }
                ],
                "_postman_variable_scope": "environment",
                "_postman_exported_at": "2023-02-18T21:56:56.755Z",
                "_postman_exported_using": "Postman/9.31.27"
            }
        ]
    },
    "step1": {
        "description": [
            "import Postman collections and environments into Postman.",
            "To import Postman collections. (a) save each element of JSON array under postman/collections as json file. (b) import the json in Postman.",
            "To import Postman environments. (a) save each element of JSON array at /postman/environments as json file. (b) import the json in Postman."
        ]
    },
    "step2": {
        "description": "find your machines IP address in LAN, which is needed in later steps. Let's say the IP is YOUR_MACHINE_IP",
        "shellCommand": "ifconfig"
    },
    "step3": {
        "description": "start a service instance that serves as service control plane",
        "shellCommand": "docker container run -it -p $8080:8080 --env WEAVE_APP=cp0 aftersound/weave:bundle --name cp0"
    },
    "step4": {
        "description": "try the services under Postman Collection 'cp0: services (use Environment cp0@8080)'"
    },
    "step5": {
        "description": "try to start a service instance that hosts greeting services, which is expected to fail to start",
        "shellCommand": "docker container run -it -p $8081:8080 --env WEAVE_APP=basics0 --env WEAVE_RUNTIME_CONFIG_SERVER=http://<YOUR_MACHINE_IP>:8080 aftersound/weave:bundle --name basics0"
    },
    "step6": {
        "description": "try following services user Postman Collection 'basics0: runtime config management (user Environment cp0@8080)'",
        "services": [
            "CREATE Namespace",
            "GET Namespace",
            "CREATE RCM",
            "GET RCM"
        ],
        "explanation": "In essence, the runtime config is the instruction from service control plane for any service instance in namespace 'basics0' to materialize/realize services as instructed."
    },
    "step7": {
        "description": "try again to start a service instance that hosts greeting services, which is expected to start successfully",
        "shellCommand": "docker container run -it -p $8081:8080 --env WEAVE_APP=basics0 --env WEAVE_RUNTIME_CONFIG_SERVER=http://<YOUR_MACHINE_IP>:8080 aftersound/weave:bundle --name basics0"
    },
    "step8": {
        "description": "try the services using Postman Collection 'basics0: services (user Environment basics0@8081)' to get some understanding of the fundamentals of Weave Declarative Services",
        "fundamentals": [
            "the structure of runtime config",
            "the structure of service metadata/specification: (1) interface: method + parameters, (2) the binding with implementation in executionControl",
            "the key extension points"
        ]
    },
    "step9": {
        "description": "try following services user Postman Collection 'kafka0: runtime config management (user Environment cp0@8080)'",
        "services": [
            "CREATE Namespace",
            "GET Namespace",
            "CREATE RCM",
            "GET RCM"
        ],
        "explanation": "In essence, the runtime config is the instruction for any service instance in namespace 'kafka0' to materialize/realize services as instructed."
    },
    "step10": {
        "description": "try to start a service instance that hosts services interact with Apache Kafka cluster, which is expected to start successfully",
        "shellCommand": "docker container run -it -p $8082:8080 --env WEAVE_APP=kafka0 --env WEAVE_RUNTIME_CONFIG_SERVER=http://<YOUR_MACHINE_IP>:8080 aftersound/weave:bundle --name kafka0"
    },
    "step11": {
        "description": "try the services using Postman Collection 'kafka0: services (user Environment basics0@8081)', but expect to see service call failure because required dependency Apache Kafka cluster is missing"
    },
    "step12": {
        "description": "set up Apache Kafka cluster. (a) decode the following resource using BASE64 and save as docker-compose.yaml in a directory. (b) enter the directory and run the following shell command. (c) create topic 'user' with 3 partitions",
        "shellCommand": "docker-compose up",
        "resource": "dmVyc2lvbjogIjMiCnNlcnZpY2VzOgogIHpvb2tlZXBlcjoKICAgIGltYWdlOiAnYml0bmFtaS96b29rZWVwZXI6My44JwogICAgcG9ydHM6CiAgICAgIC0gJzIxODE6MjE4MScKICAgIGVudmlyb25tZW50OgogICAgICAtIEFMTE9XX0FOT05ZTU9VU19MT0dJTj15ZXMKICBrYWZrYToKICAgIGltYWdlOiAnYml0bmFtaS9rYWZrYTozLjInCiAgICBwb3J0czoKICAgICAgLSAnOTA5Mjo5MDkyJwogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gS0FGS0FfQlJPS0VSX0lEPTEKICAgICAgLSBLQUZLQV9DRkdfTElTVEVORVJTPVBMQUlOVEVYVDovLzo5MDkyCiAgICAgIC0gS0FGS0FfQ0ZHX0FEVkVSVElTRURfTElTVEVORVJTPVBMQUlOVEVYVDovLzo5MDkyCiAgICAgIC0gS0FGS0FfQ0ZHX1pPT0tFRVBFUl9DT05ORUNUPXpvb2tlZXBlcjoyMTgxCiAgICAgIC0gQUxMT1dfUExBSU5URVhUX0xJU1RFTkVSPXllcwogICAgZGVwZW5kc19vbjoKICAgICAgLSB6b29rZWVwZXI="
    },
    "step13": {
        "description": "try to update 'kafka0' runtime config and restart docker container for 'kafka0' to see if it calls "
    }
}